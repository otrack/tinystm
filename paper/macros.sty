%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Macros creating macros
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand*{\newmathit}[1]{%
    \expandafter \@ifdefinable \csname #1\endcsname {%
      \global \@namedef{#1}{\ensuremath{\mathit{#1}}}%
    }%
  }
\newcommand*{\newmathit@one}[1]{%
    \expandafter \@ifdefinable \csname #1\endcsname {%
      \global \@namedef{#1}##1{\ensuremath{\mathit{#1} (##1)}}%
    }%
  }
\newcommand*{\newmathit@two}[1]{%
    \expandafter \@ifdefinable \csname #1\endcsname {%
      \global \@namedef{#1}##1##2{\ensuremath{\mathit{#1} (##1,##2)}}%
    }%
  }
\newcommand*{\newmathit@three}[1]{%
    \expandafter \@ifdefinable \csname #1\endcsname {%
      \global \@namedef{#1}##1##2##3{\ensuremath{\mathit{#1} (##1,##2,##3)}}%
    }%
  }
\newcommand*{\newmathit@four}[1]{%
    \expandafter \@ifdefinable \csname #1\endcsname {%
      \global \@namedef{#1}##1##2##3##4{\ensuremath{\mathit{#1} (##1,##2,##3,##4)}}%
    }%
  }
\newcommand*{\newmathsub@one}[1]{%
    \expandafter \@ifdefinable \csname #1\endcsname {%
      \global \@namedef{#1}##1{\ensuremath{\mathit{#1}_{##1}}}%
    }%
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Formatting
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{invitemize}
{\begin{itemize}\renewcommand{\labelitemi}{}\renewcommand{\labelitemii}{}}
{\end{itemize}}

\newcounter{exempleCounter}
\setcounter{exempleCounter}{0}
\newenvironment{exemple}
{
  \begin{invitemize}
  \addtocounter{exempleCounter}{1}
  \item \text{\textsf{Example} \arabic{exempleCounter}~:~}
}
{\end{invitemize}}

\newcounter{constructionCounter}
\setcounter{constructionCounter}{0}
\newenvironment{construction}
{
  \addtocounter{exempleCounter}{1}
  \begin{itemize}
    \item[(\textbf{Construction~\arabic{exempleCounter}})]
}
{\end{itemize}}

\newenvironment{preuveInformelle}
{
  \textbf{Correctness.}
}
{$\square$}

\newcommand{\labfigure}[1]{\label{fig:#1}}
\newcommand{\reffigure}[1]{Figure~\ref{fig:#1}}

\newcommand{\labtab}[1]{\label{tab:#1}}
\newcommand{\reftab}[1]{Table~\ref{tab:#1}}

\newcommand{\labsection}[1]{\label{sect:#1}}
\newcommand{\refsection}[1]{Section~\ref{sect:#1}}

\newcommand{\labappendix}[1]{\label{appendix:#1}}
\newcommand{\refappendix}[1]{Appendix~\ref{appendix:#1}}

\newcommand{\labalg}[1]{\label{alg:#1}}
\newcommand{\refalg}[1]{Algorithm~\ref{alg:#1}}
\newcommand{\refalgtwo}[2]{Algorithms~\ref{alg:#1}~and~\ref{alg:#2}}

\newcommand{\labline}[1]{\label{line:alg:#1}}
\newcommand{\refline}[1]{line~\ref{line:alg:#1}}
\newcommand{\reflines}[2]{lines~\ref{line:alg:#1}~to~\ref{line:alg:#2}}
\newcommand{\reflinestwo}[2]{lines~\ref{line:alg:#1}~and~\ref{line:alg:#2}}
\newcommand{\reflinesthree}[3]{lines~\ref{line:alg:#1},~\ref{line:alg:#2}~and~\ref{line:alg:#3}}

\newcommand{\labdef}[1]{\label{def:#1}}
\newcommand{\refdef}[1]{Definition~\ref{def:#1}}

\newcommand{\labclaim}[1]{\label{claim:#1}}
\newcommand{\refclaim}[1]{Claim~\ref{claim:#1}}
\newcommand{\refclaims}[2]{Claims~\ref{claim:#1}~to~\ref{claim:#2}}

\newcommand{\lablem}[1]{\label{lem:#1}}
\newcommand{\reflem}[1]{Lemma~\ref{lem:#1}}

\newcommand{\labprop}[1]{\label{prop:#1}}
\newcommand{\refprop}[1]{Proposition~\ref{prop:#1}}
\newcommand{\refprops}[2]{Proposition~\ref{claim:#1}~to~\ref{claim:#2}}

\newcommand{\labtheo}[1]{\label{theo:#1}}
\newcommand{\reftheo}[1]{Theorem~\ref{theo:#1}}

\newcommand{\labcor}[1]{\label{cor:#1}}
\newcommand{\refcor}[1]{Theorem~\ref{cor:#1}}

\newcommand{\labequation}[1]{\label{eq:#1}}
\newcommand{\refequation}[1]{(Equation~\ref{eq:#1})}

\newcommand{\labinv}[1]{\label{inv:#1}}
\newcommand{\refinv}[1]{Invariant~\ref{inv:#1}}
\newcommand{\refinvs}[2]{Invariants~\ref{inv:#1}~to~\ref{inv:#2}}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%% Algorithms %%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\usepackage{ifthen}

% Others
\newcommand{\alg}{\ensuremath{\mathcal{A}}}

% Blocks
\renewcommand{\Return}{\State \textbf{return} }
\algblockdefx[when]{StartWhen}{EndWhen}[1]{\textbf{when} #1}{}
\algrenewcommand\algorithmicprocedure{\textbf{Task}}
\algblockdefx[when]{WhenFT}{EndWhenFT}[1]{\textbf{when} #1 \textbf{for the first time}}{}
\newenvironment{for}[1]{\ForAll{#1}}{\EndFor}
\newenvironment{while}[1]{\While{#1}}{\EndWhile}

% Action
\newboolean{preIndent}
\newboolean{effIndent}
\algblockdefx[action]{StartAction}{EndAction}[1]{%
  \setboolean{preIndent}{true}%
  \setboolean{effIndent}{true}%
  #1}{}
\newenvironment{action}[1]{\StartAction{#1~:=}}{\EndAction}
\newcommand{\Precondition}[1]{
  \ifthenelse{\boolean{preIndent}}
             {\setboolean{preIndent}{false}\State\textbf{pre:}\hspace{0.7em}#1}
             {\State\hspace{2.5em}#1}
  }
\newcommand{\Effect}[1]{
  \ifthenelse{\boolean{effIndent}}
             {\setboolean{effIndent}{false}\State\textbf{eff:}\hspace{1em}#1}
             {\State\hspace{2.5em}#1}
  }

% Procedure
\algblockdefx[procedure]{StartProcedure}{EndProcedure}[1]{#1~:=}{}
\newenvironment{procedure}[1]{\StartProcedure{#1}}{\EndProcedure}
\makeatletter
\ifthenelse{\equal{\ALG@noend}{t}}%
  {\algtext*{EndProcedure}}
  {}%
\makeatother

% Function
\algblockdefx[function]{StartFunction}{EndFunction}[1]{#1}{}
\newenvironment{function}[1]{\StartFunction{\textbf{function} #1~:=}}{\EndFunction}
\makeatletter
\ifthenelse{\equal{\ALG@noend}{t}}%
  {\algtext*{EndFunction}}
  {}%
\makeatother

% Task
\algblockdefx[task]{StartTask}{EndTask}[1]{\textbf{Task #1.}}{}
\newenvironment{task}[1]{\StartTask{#1}}{\EndTask}

% Variables
\algblockdefx[variables]{StartVariables}{EndVariables}{\textbf{Variables:}}{}
\makeatletter
\ifthenelse{\equal{\ALG@noend}{t}}%
  {\algtext*{EndVariables}}
  {}%
\makeatother

\algblockdefx[svariables]{StartSVariables}{EndSVariables}{\textbf{Shared Variables:}}{}
\makeatletter
\ifthenelse{\equal{\ALG@noend}{t}}%
  {\algtext*{EndSVariables}}
  {}%
\makeatother

\algblockdefx[lvariables]{StartLVariables}{EndLVariables}{\textbf{Local Variables:}}{}
\makeatletter
\ifthenelse{\equal{\ALG@noend}{t}}%
  {\algtext*{EndLVariables}}
  {}%
\makeatother


\newenvironment{variables}{\StartVariables}{\EndVariables}
\newenvironment{svariables}{\StartSVariables}{\EndSVariables}
\newenvironment{lvariables}{\StartLVariables}{\EndLVariables}
\newcommand{\Var}[3]{\State \ensuremath{#1~\in~#2} \Comment{Initially,~\ensuremath{#3}}}
\newcommand{\VarNoInitialization}[2]{\State \ensuremath{#1~\in~m#2}}
\newcommand{\VarNoType}[2]{\State #1 \Comment{Initially,~#2}}
\newcommand{\VarCustom}[1]{\State #1}
\algblockdefx[initialization]{StartInitialization}{EndInitialization}{\textbf{initialization}}{}

\algrenewcommand{\algorithmiccomment}[1]{\hfill // #1}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Maths
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Sequences
\newcommand{\seqSet}{\ensuremath{\mathit{CSeq}}}
\newcommand{\seqAppend}{\ensuremath{\circ}}
\newcommand{\seqPrefix}{\ensuremath{\sqsubseteq}}
\newcommand{\seqNull}{\ensuremath{\epsilon}}
\newcommand{\seqEquiv}{\ensuremath{\thicksim}}
\newcommand{\seqEquivPrime}{\ensuremath{\approx}}
\newcommand{\seqBot}{\ensuremath{\epsilon}}
\newcommand{\seqSetOf}[1]{\ensuremath{cseq(#1)}}

% reasoning
\newcounter{factCounter}
\newenvironment{preuve}
{\setcounter{factCounter}{0}\vspace{0.2em}\noindent\textit{Proof}\setlength{\parindent}{0em}}
{\begin{flushright}$\square$\end{flushright}\vspace{0.2em}}

\newenvironment{deduction}
{
  \begin{description}
}
{\end{description}}

\newcommand{\soit}[1]{\item[\textsf{Let:}] #1}
\newcommand{\soitCause}[2]{\item[\textsf{Let:}] #1\\\textsf{Proof:}~#2}
\newcommand{\soitTelQue}[2]{\item[\textsf{Let}]~#1~\textbf{\textsf{defined by:}}\\#2}
\newcommand{\parRecurrence}{\item[\textsf{By induction.}]}
\newcommand{\parAbsurde}{\item[\textsf{By contradiction.}]}
\newcommand{\cas}[1]{\item[\textsf{Case:}] #1}
\newcommand{\casDefault}{\item[\textsf{Default:}]~}
\newcommand{\suppose}[1]{\item[\textsf{Assume:}] #1}
\newcommand{\faitCause}[2]{\addtocounter{factCounter}{1}\item[\textsf{Fact~\arabic{factCounter}:}] #1\\\textsf{Proof:} #2}
\newcommand{\faitEvident}[1]{\addtocounter{factCounter}{1}\item[\textsf{Fact~\arabic{factCounter}:}]#1}
\newcommand{\faitADeduire}[1]{\addtocounter{factCounter}{1}\item[\textsf{Fact~\arabic{factCounter}:}] #1}
\newcommand{\aProuver}[1]{\item[\textsf{Prove:}] #1}
\newcommand{\evidence}{\item[\cqfd]}
\newcommand{\evidenceCause}[1]{\item[\cqfd]~\\\textsf{Proof:}~#1}
\newcommand{\absurdite}{\item[\textsf{Absurd.}]}
\newcommand{\absurditeCause}[1]{\item[\textsf{Absurd.}]~\\\textsf{Proof:}~#1}
\newcommand{\nonModifie}[1]{\item[\textsf{Unchanged:}]~#1}

% Relation theory
\newcommand{\domainOf}[1]{\ensuremath{\mathit{domain}(#1)}}
\newcommand{\codomainOf}[1]{\ensuremath{\mathit{codomain}(#1)}}

% Various things
\let\ensuremathorig=\ensuremath
\newcommand{\st}{\ensuremath{\xspace|\xspace}}
\renewcommand{\ensuremath}[1]{\ensuremathorig{#1}\xspace}
\newcommand{\naturalSet}{\ensuremath{\mathbb{N}}}
\newcommand{\cardinalOf}[1]{\ensuremath{\lvert #1 \rvert}}
\newcommand{\sumOf}[3]{\ensuremath{\sum_{#1}^{#2} #3}}
\newcommand{\partieEntiere}[1]{\ensuremath{\lfloor#1\rfloor}} % partie entière par défaut
\newcommand{\partieEntieree}[1]{\ensuremath{\lceil#1\rceil}} % partie entière par excés 
\newcommand{\modulo}[2]{\ensuremath{#1\left[#2\right]}}
\newcommand{\xor}{\oplus}
\newcommand{\bigxor}{\ensuremath{\bigoplus}}
\newcommand{\union}{\cup}
\newcommand{\inter}{\cap}
\newcommand{\bigunion}{\ensuremath{\bigcup}}
\newcommand{\biginter}{\ensuremath{\bigcap}}
\newcommand{\bottom}{\ensuremath{\bot}}
\newcommand{\equaldef}{\ensuremath{\stackrel{\triangle}{=}}}
\newcommand{\equivdef}{\stackrel{\mathrm{def}}{\equiv}}
\newcommand{\iftxt}{~{\mathrm{if}}~}
\newcommand{\ifftxt}{~{\mathrm{iff}}~}
\newcommand{\logarithmOf}[2]{\ensuremath{\mathit{log}_{#1}(#2)}}
\let\longimplies=\implies
\renewcommand{\implies}{\ensuremath{\rightarrow}}
\renewcommand{\impliedby}{\ensuremath{\leftarrow}}
\let\longiff=\iff
\renewcommand{\iff}{\Leftrightarrow}
\newcommand{\Henceforth}{\Box}
\let\emptyset\varnothing
\newcommand{\emptySet}{\ensuremath{\emptyset}}
\newcommand{\true}{\ensuremath{\mathit{true}}}
\newcommand{\false}{\ensuremath{\mathit{false}}}
\newcommand{\notimplies}{\ensuremath{\not \implies}}
\newcommand{\equals}{\ensuremath{=}}
\newcommand{\pp}[1]{{\sf #1}}
\newcommand{\quotientSet}[2]{\ensuremath{{#1}_{/#2}}}
\newcommand{\lub}{\ensuremath{\sqcup}}
\newcommand{\glb}{\ensuremath{\sqcap}}
\newcommand{\glbOf}[1]{\ensuremath{\sqcap \xspace \left( #1 \right) }}
\newcommand{\lubOf}[1]{\ensuremath{\sqcup \xspace \left( #1 \right) }}

\newcommand{\maximum}{\ensuremath{\mathit{max}}}
\newcommand{\maxOf}[1]{\ensuremath{\mathit{max}(#1)}}
\newcommand{\maxPair}[2]{\ensuremath{\mathit{max}(#1,#2)}}
\newcommand{\minOf}[1]{\ensuremath{\mathit{min}(#1)}}
\newcommand{\minimum}{\ensuremath{\mathit{min}}}

\newcommand{\minOfOver}[2]{\ensuremath{\mathit{min}_{#2}~#1}}
\newcommand{\maxOfOver}[2]{\ensuremath{\mathit{max}_{#2}~#1}}
\newcommand{\isBounded}[1]{\ensuremath{#1~\text{bounded}}}
\newcommand{\limit}[3]{\ensuremath{\lim_{#2 \to #3}#1}}
%\newcommand{\floor}[1]{\ensuremath{\left\lfloor #1 \right\rfloor}}
\newcommand{\classOf}[1]{\ensuremath{[#1]}}
\newcommand{\classOfFor}[2]{\ensuremath{[#1]_{#2}}}
\newcommand{\equalsby}[1]{\ensuremath{\buildrel #1\over \equals}}
\newcommand{\tclosure}[1]{\ensuremath{#1^{*}}}

% Temporal logic
\newcommand{\tlGlobally}{\ensuremath{\square}}
\newcommand{\tlFuture}{\ensuremath{\lozenge}}
\newcommand{\tlNext}{\ensuremath{\circ}}
\newcommand{\nextOf}[1]{\ensuremath{{#1}{'}}}

% Assignment
\newcommand{\assign}{\ensuremath{\leftarrow}}
\newcommand{\abs}[1]{\ensuremath{|#1|}}
\newcommand{\nequals}{\ensuremath{\neq\xspace}}
\newcommand{\braket}[1]{\ensuremath{\langle #1 \rangle}}

% % Definition, Theorem, ... 
\newtheorem{definition}{Definition}
\newtheorem{proposition}{Proposition}
\newtheorem{proposition*}{Proposition}
\newtheorem{corollary}{Corollary}
\newtheorem{theorem}{Theorem}
\newtheorem{lemma}{Lemma}
\newtheorem{claim}{Claim}

\newcounter{assumptionCounter}
\setcounter{assumptionCounter}{0}
\newenvironment{assumption}
{\addtocounter{assumptionCounter}{1}\begin{displaymath}\text{\textbf{A\arabic{assumptionCounter}.~~}}}
{\end{displaymath}}

\newcommand{\cqfd}{\textsf{QED.}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Data consistency
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\objectSet}{\ensuremath{\mathit{Objects}}}
\newcommand{\objectSetOf}[1]{\ensuremath{\mathit{obj}(#1)}}

% Data item and object
\newcommand{\stateSet}{\ensuremath{States}}
\newcommand{\state}{\ensuremath{\mathit{st}}}
\newcommand{\valSet}{\ensuremath{\mathit{Values}}}
\newcommand{\val}{\ensuremath{\mathit{val}}}
\newcommand{\stateInit}{\ensuremath{\mathit{s_0}}}
\newcommand{\operationSet}{\ensuremath{\mathit{Op}}}
\newcommand{\cmdSet}{\ensuremath{\mathit{Cmd}}}
\newcommand{\op}{\ensuremath{\mathit{op}}}
\newcommand{\conflict}[2]{\ensuremath{\mathit{Conflict}(#1,#2)}}
\newcommand{\rwconflict}[2]{\ensuremath{\mathit{RWConflict}(#1,#2)}}
\newcommand{\wwconflict}[2]{\ensuremath{\mathit{WWConflict}(#1,#2)}}

% Relation between operations
\newcommand{\NotAfterSymbol}{\mathrel{\rightarrow}}
\newcommand{\NotAfter}{\ensuremath{\NotAfterSymbol}}
\newcommand{\EnablesSymbol}{\mathrel{\lhd}}
\newcommand{\MustHaveSymbol}{\mathrel{\rhd}}
\newcommand{\Enables}{\ensuremath{\EnablesSymbol}}
\newcommand{\MustHave}{\ensuremath{\MustHaveSymbol}}
\newcommand{\commutingSymbol}{\mathrel{\asymp}}
\newcommand{\commuting}{\ensuremath{\commutingSymbol}}
\newcommand{\NonCommutingSymbol}{\not\mathrel{\asymp}}
\newcommand{\NonCommuting}{\ensuremath{\NonCommutingSymbol}}

% Consistency criterion
\newcommand{\conscSet}{\ensuremath{Spec}}
\newcommand{\conscEquiv}{\ensuremath{\stackrel{*}{\thicksim}}}

% Command structures
\newcommand{\cstructNull}{\ensuremath{\bot}}
\newcommand{\cstructAppend}{\ensuremath{\bullet}}
\newcommand{\cstructAppendPrime}{\ensuremath{\star}}
\newcommand{\cstructAppendSecond}{\ensuremath{\square}}

%\newcommand{\cstructConcat}{\ensuremath{*}}
\newcommand{\cstructPrefix}{\ensuremath{\sqsubseteq}}
\newcommand{\cstructStrictPrefix}{\ensuremath{\sqsubset}}
\newcommand{\cstructWellFormedPrefix}{\ensuremath{\sqsubseteq^{+}}}
\newcommand{\cstructSet}{\ensuremath{\mathit{CStruct}}}
\newcommand{\cstructSetOf}[1]{\ensuremath{\mathit{Str(#1)}}}
\newcommand{\compatible}[1]{\ensuremath{\{#1\}~\text{compatible}}}
\newcommand{\kcompatible}[2]{\ensuremath{#1~\text{#2-compatible}}}
\newcommand{\twocompatible}[1]{\kcompatible{#1}{2}}
\newcommand{\canonical}[1]{\ensuremath{canonical(#1)}}
\newcounter{cstructAssumptionCounter}
\setcounter{cstructAssumptionCounter}{0}
\newcommand{\cstructAssumption}[1]
{
  \addtocounter{cstructAssumptionCounter}{1}
  \begin{tabular}{1cm}{15cm}
    \textbf{CS\arabic{cstructAssumptionCounter}.}~~ #1
  \end{tabular}
}

% Process
\newcommand{\procSet}{\ensuremath{\mathrm{\Pi}}}
\newcommand{\groupSet}{\ensuremath{\Gamma}}
\newcommand{\groupOf}[1]{\ensuremath{\mathit{group}(#1)}}
\newcommand{\run}{\ensuremath{\rho}}

% Latency 
\newcommand{\runs}[1]{\ensuremath{\mathit{runs(#1)}}}
\newcommand{\niceruns}[1]{\ensuremath{\mathit{nice(#1)}}}
\newcommand{\soruns}[1]{\ensuremath{\mathit{so(#1)}}}
\newcommand{\length}[1]{\ensuremath{\mathit{len(#1)}}}
\newcommand{\latency}[1]{\ensuremath{\mathit{lat(#1)}}}
\newcommand{\ldegree}[1]{\ensuremath{\mathit{\Delta_{#1}}}}
\newcommand{\ldegreeFor}[2]{\ensuremath{\mathit{\Delta^{#2}_{#1}}}}
\newcommand{\ddegree}[1]{\ensuremath{\mathit{\Lambda_{#1}}}}
\newcommand{\ddegreeFor}[2]{\ensuremath{\mathit{\Lambda^{#2}_{#1}}}}

% Happens-before
\newcommand{\hb}{\ensuremath{\prec}}
\newcommand{\hbeq}{\ensuremath{\preceq}}
\newcommand{\cc}{\ensuremath{\parallel}}

% Histories
\newcommand{\histSet}{\ensuremath{\mathcal{H}}}

\newcommand{\completeOf}[1]{\ensuremath{\mathit{complete}(#1)}}
\newcommand{\invocation}[2]{\ensuremath{\mathit{inv}_{#1}(#2)}}
\newcommand{\response}[3]{\ensuremath{\mathit{res}_{#1}(#2,#3)}}
\newcommand{\responseAny}[2]{\ensuremath{\mathit{res}(#1,#2)}}

\newcommand{\linPrec}[1]{\ensuremath{\prec_{#1}}}
\newcommand{\linEquiv}{\ensuremath{\sim}}

\newcommand{\commit}[1]{\ensuremath{\mathit{commit}(#1)}}
\newcommand{\serPrec}[1]{\ensuremath{\stackrel{\mathit{tr}}{<_{#1}}}}
\newcommand{\serEquiv}{\ensuremath{\stackrel{\mathit{tr}}{\sim}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Message-passsing dist. systems
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\msgSet}{\ensuremath{\mathit{Msg}}}
\newcommand{\msgAny}{\ensuremath{\textifsym{l}}}
\newcommand{\destOf}[1]{\ensuremath{#1.\mathit{dst}}}
\newcommand{\link}[2]{\ensuremath{\mathit{link}(#1,#2)}}

% Faults
\newcommand{\faulty}[1]{\ensuremath{\mathit{faulty}(#1)}}
\newcommand{\correct}[1]{\ensuremath{\mathit{correct}(#1)}}
\newcommand{\correctSet}{\ensuremath{Correct}}
\newcommand{\faultySet}{\ensuremath{Faulty}}

% Oracle
\newcommand{\fdLeader}{\ensuremath{\Omega}}
\newcommand{\fdALeader}{\ensuremath{A\Omega}}
\newcommand{\fdAPerfect}{\ensuremath{AP}}
\newcommand{\fdALeaderQuery}{\ensuremath{A\Omega.\mathit{query()}}}
\newcommand{\fdDiamondS}{\ensuremath{\Diamond S}}
\newcommand{\fdDiamondW}{\ensuremath{\Diamond W}}
\newcommand{\fdWLeader}{\ensuremath{\mathit{WLeader}}}

% Send/Receive
\newcommand{\send}[2]{\ensuremath{\mathit{send}~\left\langle #1 \right\rangle~\mathit{to}~#2}}
\newcommand{\sendAny}[1]{\ensuremath{\mathit{send}~\left\langle #1 \right\rangle}}
\newcommand{\sendOperation}{\ensuremath{\mathit{send}}}
\newcommand{\receiveOperation}{\ensuremath{\mathit{receive}}}
\newcommand{\receivedFromBy}[3]{\ensuremath{#3~\mathit{received}~\langle #1 \rangle~\mathit{from}~#2}}
\newcommand{\receivedFrom}[2]{\ensuremath{\mathit{received}~\langle #1 \rangle~\mathit{from}~#2}}
\newcommand{\receivedAny}[1]{\ensuremath{\mathit{received}~\langle #1 \rangle}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Group communication primitives
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% abstract group communication
\newcommand{\abstractCast}[1]{\ensuremath{\text{X-Cast}(#1)}}
\newcommand{\abstractDeliver}[1]{\ensuremath{\text{X-Deliver}(#1)}}

% Consensus
\newcommand{\valueSet}{\ensuremath{\mathbb{V}}}
\newcommand{\valueSetStar}{\ensuremath{{\mathbb{V}}^{*}}}
\newcommand{\cPropose}[1]{\ensuremath{\mathit{propose}(#1)}}
\newcommand{\cProposedOf}[1]{\ensuremath{\mathit{proposed}_{#1}}}
\newcommand{\cDecide}[1]{\ensuremath{\mathit{decide}(#1)}}
\newcommand{\cDecidedOf}[1]{\ensuremath{\mathit{decided}_{#1}}}

% Broadcast
\newcommand{\broadcast}[2]{\ensuremath{\mathit{broadcast}(#1)~\mathit{to}~#2}}

% Reliable broadcast
\newcommand{\rbcast}[1]{\ensuremath{\text{RB-Cast}(#1)}}
\newcommand{\rbcastAction}{\ensuremath{\text{RB-Cast}}}
\newcommand{\rbdeliver}{\ensuremath{\text{RB-Deliver}()}}
\newcommand{\rbdeliverAction}{\ensuremath{\text{RB-Deliver}}}

% Atomic broadcast
\newcommand{\abcast}[1]{\ensuremath{\text{AB-Cast}(#1)}}
\newcommand{\abcastAction}{\ensuremath{\text{AB-Cast}}}
\newcommand{\abdeliver}{\ensuremath{\text{AB-Deliver}()}}
\newcommand{\abdeliverAction}{\ensuremath{\text{AB-Deliver}}}

% Generic broadcast
\newcommand{\gbcast}[1]{\ensuremath{\text{GB-Cast}(#1)}}
\newcommand{\gbcastAction}{\ensuremath{\text{GB-Cast}}}
\newcommand{\gbdeliver}{\ensuremath{\text{GB-Deliver}()}}
\newcommand{\gbdeliverAction}{\ensuremath{\text{GB-Deliver}}}

% Reliable Multicast
\newcommand{\rmcast}[2]{\ensuremath{\text{RM-Cast}(#1)~\text{to}~#2}}
\newcommand{\rmcastAction}{\ensuremath{\text{RM-Cast}}}
\newcommand{\rmdeliver}{\ensuremath{\text{RM-Deliver}()}}
\newcommand{\rmdeliverAction}{\ensuremath{\text{RM-Deliver}}}

% Atomic Multicast
\newcommand{\amcast}[2]{\ensuremath{\text{AM-Cast}(#1)~\text{to}~#2}}
\newcommand{\amcastBy}[2]{\ensuremath{\text{AM-Cast}_{#2}(#1)}}
\newcommand{\amcastAction}{\ensuremath{\text{AM-Cast}}}
\newcommand{\amdeliver}{\ensuremath{\text{AM-Deliver}()}}
\newcommand{\amcastActions}{\ensuremath{\text{AM-Casts}}}
\newcommand{\amdelivers}{\ensuremath{\text{AM-Delivers}}}
\newcommand{\amdeliverBy}[2]{\ensuremath{\text{AM-Deliver}_{#2}(#1)}}
\newcommand{\amdeliverAction}{\ensuremath{\text{AM-Deliver}}}

% Generalized Consensus
\newcommand{\gconsensus}{\ensuremath{\mathit{GC}}}
\newcommand{\wtgconsensus}{\ensuremath{\mathit{GC^{*}}}}

\newcommand{\quorumSet}{\ensuremath{\mathit{Quorums}}}

\newcommand{\proposerSet}{\ensuremath{\mathit{Proposers}}}
\newcommand{\gcPropose}[1]{\ensuremath{\mathit{propose}(#1)}}
\newcommand{\gcProposeBy}[2]{\ensuremath{\mathit{propose}_{#2}(#1)}}
\newcommand{\gcProposedOf}[1]{\ensuremath{\mathit{proposed}_{#1}}}
\newcommand{\gcPropCmd}{\ensuremath{\mathit{prpCmd}}}

\newcommand{\learnerSet}{\ensuremath{\mathit{Learners}}}
\newcommand{\gcLearn}[1]{\ensuremath{\mathit{learn}(#1)}}
\newcommand{\gcLearnBy}[2]{\ensuremath{\mathit{learn}_{#2}(#1)}}
\newcommand{\gcLearnedOf}[1]{\ensuremath{\mathit{learned}_{#1}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Client
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\clientSet}{\ensuremath{\mathit{Clients}}}

\newcommand{\cltLastOf}[1]{\ensuremath{\mathit{last}_{#1}}}
\newcommand{\cltExecutedOf}[1]{\ensuremath{\mathit{executed}_{#1}}}

\newcommand{\cltInvoke}[1]{\ensuremath{\mathit{invoke}(#1)}}
\newcommand{\cltInvokeAction}{\ensuremath{\mathit{invoke}}}
\newcommand{\cltResponse}[1]{\ensuremath{\mathit{response}(#1)}}
\newcommand{\cltResponseAction}{\ensuremath{\mathit{response}}}

\newcommand{\invokeMsg}{\textsf{inv}\xspace}
\newcommand{\responseMsg}{\textsf{res}\xspace}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% State Machine Replication
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\replicaSet}{\ensuremath{\mathit{Replicas}}}

\newcommand{\stmInvoked}{\ensuremath{\mathit{invoked_i}}}
\newcommand{\stmResponded}{\ensuremath{\mathit{responded_i}}}
\newcommand{\stmObjectState}{\ensuremath{\mathit{state_i}}}
\newcommand{\stmInstance}{\ensuremath{\mathit{next_i}}}
\newcommand{\stmConsensus}{\ensuremath{\mathit{consensus_i}}}

\newcommand{\stmInput}[1]{\ensuremath{\mathit{input}(#1)}}
\newcommand{\stmOutput}[1]{\ensuremath{\mathit{output}(#1)}}
\newcommand{\stmAgreement}{\ensuremath{\mathit{agreement()}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Generalized Paxos and friends
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% General definitions and shared-memory algorithms

\newcommand{\acceptorSet}{\ensuremath{\mathit{Acceptors}}}
\newcommand{\coordinatorSet}{\ensuremath{\mathit{Coordinators}}}
\newcommand{\quorum}[1]{\ensuremath{\mathit{quorum}(#1)}}
\newcommand{\wquorum}[1]{\ensuremath{\mathit{wquorum}(#1)}}
\newcommand{\rquorum}[1]{\ensuremath{\mathit{rquorum}(#1)}}

\newcommand{\isFast}[1]{\ensuremath{\mathit{isFast}(#1)}}
\newcommand{\balnumSet}{\ensuremath{\mathit{BalNum}}}
\newcommand{\balnumAfter}[1]{\ensuremath{#1{++}}}
\newcommand{\balnumBefore}[1]{\ensuremath{#1{--}}}
\newcommand{\ballotArray}{\ensuremath{\beta}}
\newcommand{\ballotArrayOf}[1]{\ensuremath{\beta_{#1}}}
\newcommand{\ballotArrayOfAt}[2]{\ensuremath{\beta_{#1}[#2]}}
\newcommand{\ballotArrayNumOf}[1]{\ensuremath{\widehat{\beta}_{#1}}}

\newcommand{\chosenAtIn}[2]{\ensuremath{\mathit{chosen}(#1,#2)}}
\newcommand{\chosenIn}[1]{\ensuremath{\mathit{chosen}(#1)}}
\newcommand{\choosableAtIn}[2]{\ensuremath{\mathit{choosable}(#1,#2)}}
\newcommand{\isSafeAtIn}[3]{\ensuremath{#1~\mathit{safe~at~ballot}~#2~\mathit{in}~#3}}
\newcommand{\isSafe}[1]{\ensuremath{#1~\mathit{safe}}}
\newcommand{\isConservative}[1]{\ensuremath{#1~\mathit{conservative}}}

\newcommand{\none}{\ensuremath{none}}

\newcommand{\provedSafe}[4]{\ensuremath{\mathit{provedSafe}(#1,#2,#3,#4)}}
\newcommand{\provedSafeAlg}{\ensuremath{\mathit{provedSafe}}}
\newcommand{\collide}[1]{\ensuremath{\mathit{collide}(#1)}}
\newcommand{\isCentered}[1]{\ensuremath{\mathit{centered}(#1)}}

\newcommand{\abstractFGGC}{\ensuremath{\mathit{abstractFGGC}}}
\newcommand{\absPropCmd}{\ensuremath{\mathit{PrpCmd}}}
\newcommand{\absProposed}{\ensuremath{\mathit{Proposed}}}
\newcommand{\absProposedOf}[1]{\ensuremath{\mathit{Proposed}[#1]}}
\newcommand{\absLearned}{\ensuremath{\mathit{Learned}}}
\newcommand{\absLearnedOf}[1]{\ensuremath{\mathit{Learned}[#1]}}
\newcommand{\absMaxTried}{\ensuremath{\mathit{MaxTried}}}
\newcommand{\absMaxTriedAt}[1]{\ensuremath{\mathit{MaxTried}[#1]}}
\newcommand{\absMinTried}{\ensuremath{\mathit{MinTried}}}
\newcommand{\absMinTriedAt}[1]{\ensuremath{\mathit{MinTried}[#1]}}
\newcommand{\abstractPropose}[2]{\ensuremath{\mathit{Propose}(#1,#2)}}
\newcommand{\abstractProposeAction}{\ensuremath{\mathit{Propose}}}
\newcommand{\abstractLearn}[3]{\ensuremath{\mathit{Learn}(#1,#2,#3)}}
\newcommand{\abstractLearnAction}{\ensuremath{\mathit{Learn}}}
\newcommand{\abstractJoinBallot}[2]{\ensuremath{\mathit{JoinBallot}(#1,#2)}}
\newcommand{\abstractJoinBallotAction}{\ensuremath{\mathit{JoinBallot}}}
\newcommand{\abstractStartBallot}[4]{\ensuremath{\mathit{StartBallot}(#1,#2,#3,#4)}}
\newcommand{\abstractStartBallotAction}{\ensuremath{\mathit{StartBallot}}}
\newcommand{\abstractSuggest}[3]{\ensuremath{\mathit{Suggest}(#1,#2,#3)}}
\newcommand{\abstractSuggestAction}{\ensuremath{\mathit{Suggest}}}
\newcommand{\abstractClassicVote}[2]{\ensuremath{\mathit{ClassicVote}(#1,#2)}}
\newcommand{\abstractClassicVoteAction}{\ensuremath{\mathit{ClassicVote}}}
\newcommand{\abstractFastVote}[2]{\ensuremath{\mathit{FastVote}(#1,#2)}}
\newcommand{\abstractFastVoteAction}{\ensuremath{\mathit{FastVote}}}
\newcommand{\abstractRecover}[2]{\ensuremath{\mathit{Recover}(#1,#2)}}
\newcommand{\abstractRecoverAction}{\ensuremath{\mathit{Recover}}}

%% Generalized Paxos algorithm

\newcommand{\gpaxos}{GPaxos\xspace}
\newcommand{\paxos}{Paxos\xspace}
\newcommand{\fpaxos}{Fast Paxos\xspace}

% proposer
\newcommand{\propose}[1]{\ensuremath{\mathit{propose}(#1)}}
\newcommand{\proposeBy}[2]{\ensuremath{\mathit{propose}_{#2}(#1)}}
\newcommand{\proposeAction}{\ensuremath{\mathit{propose}}}
\newcommand{\proposeMsg}{\textsf{propose}\xspace}

% coordinator
\newcommand{\coordOf}[1]{\ensuremath{\mathit{coord}(#1)}}
\newcommand{\phaseOneA}[1]{\ensuremath{\mathit{phase1A}(#1)}}
\newcommand{\phaseOneABy}[2]{\ensuremath{\mathit{phase1A}_{#2}(#1)}}
\newcommand{\phaseOneAAction}{\ensuremath{\mathit{phase1A}}}
\newcommand{\oneAMsg}{\textsf{1A}\xspace}
\newcommand{\phaseTwoStart}[3]{\ensuremath{\mathit{phase2Start}(#1,#2,#3)}}
\newcommand{\phaseTwoStartBy}[4]{\ensuremath{\mathit{phase2Start}_{#4}(#1,#2,#3)}}
\newcommand{\phaseTwoStartAction}{\ensuremath{\mathit{phase2Start}}}
\newcommand{\phaseTwoAClassic}[2]{\ensuremath{\mathit{phase2AClassic}(#1,#2)}}
\newcommand{\phaseTwoAClassicBy}[3]{\ensuremath{\mathit{phase2AClassic}_{#3}(#1,#2)}}
\newcommand{\phaseTwoAClassicAction}{\ensuremath{\mathit{phase2AClassic}}}
\newcommand{\twoAMsg}{\textsf{2A}\xspace}
\newcommand{\maxStart}{\ensuremath{\mathit{maxStart}}}
\newcommand{\maxStartOf}[1]{\ensuremath{\mathit{maxStart}_{#1}}}
\newcommand{\maxTried}{\ensuremath{\mathit{maxTried}}}
\newcommand{\maxTriedOf}[1]{\ensuremath{\mathit{maxTried}_{#1}}}

% acceptor
\newcommand{\oneBMsg}{\textsf{1B}\xspace}
\newcommand{\twoBMsg}{\textsf{2B}\xspace}
\newcommand{\phaseOneB}[1]{\ensuremath{\mathit{phase1B}(#1)}}
\newcommand{\phaseOneBBy}[2]{\ensuremath{\mathit{phase1B}_{#2}(#1)}}
\newcommand{\phaseOneBAction}{\ensuremath{\mathit{phase1B}}}
\newcommand{\phaseTwoBClassic}[2]{\ensuremath{\mathit{phase2BClassic}(#1,#2)}}
\newcommand{\phaseTwoBClassicBy}[3]{\ensuremath{\mathit{phase2BClassic}_{#3}(#1,#2)}}
\newcommand{\phaseTwoBClassicAction}{\ensuremath{\mathit{phase2BClassic}}}
\newcommand{\phaseTwoBFast}[1]{\ensuremath{\mathit{phase2BFast}(#1)}}
\newcommand{\phaseTwoBFastBy}[2]{\ensuremath{\mathit{phase2BFast}_{#2}(#1)}}
\newcommand{\phaseTwoBFastAction}{\ensuremath{\mathit{phase2BFast}}}
\newcommand{\balOf}[1]{\ensuremath{\mathit{bal}_{#1}}}
\newcommand{\cbalOf}[1]{\ensuremath{\mathit{cbal}_{#1}}}
\newcommand{\cvalOf}[1]{\ensuremath{\mathit{cval}_{#1}}}

% learner
\newcommand{\learn}[3]{\ensuremath{\mathit{learn}(#1,#2,#3)}}
\newcommand{\learnBy}[4]{\ensuremath{\mathit{learn}_{#4}(#1,#2,#3)}}
\newcommand{\learnAction}{\ensuremath{\mathit{learn}}}
\newcommand{\learnedOf}[1]{\ensuremath{\mathit{learned}_{#1}}}

% history variables (for the proof)
\newcommand{\histMinTried}{\ensuremath{\mathit{hMinTried}}}
\newcommand{\histMinTriedOf}[1]{\ensuremath{\mathit{hMinTried}_{#1}}}
\newcommand{\histMinTriedOfAt}[2]{\ensuremath{\mathit{hMinTried}_{#1}[#2]}}
\newcommand{\histMaxTried}{\ensuremath{\mathit{hMaxTried}}}
\newcommand{\histMaxTriedOf}[1]{\ensuremath{\mathit{hMaxTried}_{#1}}}
\newcommand{\histMaxTriedOfAt}[2]{\ensuremath{\mathit{hMaxTried}_{#1}[#2]}}
\newcommand{\histCVal}{\ensuremath{\mathit{hcval}}}
\newcommand{\histCValOf}[1]{\ensuremath{\mathit{hcval}_{#1}}}
\newcommand{\histCValOfAt}[2]{\ensuremath{\mathit{hcval}_{#1}[#2]}}

% Fast Genuine Generalized Consensus
\newcommand{\FGGC}{FGGC\xspace}
\newcommand{\recover}[1]{\ensuremath{\mathit{recover}(#1)}}
\newcommand{\recoverBy}[2]{\ensuremath{\mathit{recover}_{#2}(#1)}}
\newcommand{\recoverAction}{\ensuremath{\mathit{recover}}}
\newcommand{\safeVar}{\ensuremath{\mathit{safe}}}

% Liveness
\newcommand{\skipMsg}{\textsf{SKIP}\xspace}
\newcommand{\skipBallot}[1]{\ensuremath{\mathit{skipBallot}(#1)}}
\newcommand{\skipBallotAction}{\ensuremath{\mathit{skipBallot}}}
\newcommand{\startedBalnumSet}{\ensuremath{\mathit{Started}}}
\newcommand{\joinedBalnumSet}{\ensuremath{\mathit{Joined}}}
\newcommand{\isLive}[1]{\ensuremath{\mathit{live(#1)}}}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Graphs theory stuff
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\emptyGraph}{\ensuremath{(\emptySet,\emptySet)}}

\newcommand{\pgraphSite}[1]{\ensuremath{G_{#1}}}
\newcommand{\Gi}{\ensuremath{\pgraphSite{i}}}
\newcommand{\pgraphSiteTime}[2]{\ensuremath{G_{#1,#2}}}
\newcommand{\Git}{\ensuremath{\pgraphSiteTime{i}{t}}}

\newcommand{\vertices}[1]{\ensuremath{{#1}.\mathcal{V}}}
\newcommand{\edges}[1]{\ensuremath{{#1}.\mathcal{E}}}
\newcommand{\weight}[1]{ \ensuremath{weight}{#1}}

\newcommand{\incomingNeighbors}[2]{\ensuremath{in}{#1,#2}}
\newcommand{\incomingNeighborsI}[1]{\ensuremath{in}{#1,\Gi}}
\newcommand{\incomingNeighborsIT}[1]{\ensuremath{in}{#1,\Git}}

\newcommand{\outgoingNeighbors}[2]{\ensuremath{out}{#1,#2}}
\newcommand{\outgoingNeighborsI}[1]{\ensuremath{out}{#1,\Gi}}
\newcommand{\outgoingNeighborsIT}[1]{\ensuremath{out}{#1,\Git}}

\newcommand{\predecessors}[2]{\ensuremath{pred}{#1,#2}}
\newcommand{\predecessorsI}[1]{\predecessors{T}{\Gi}}
\newcommand{\predecessorsIT}[1]{\predecessors{T}{\Git}}

\newcommand{\successors}[2]{\ensuremath{succ}{#1,#2}}
\newcommand{\successorsI}[1]{\successors{T}{\Gi}}
\newcommand{\successorsIT}[1]{\successors{T}{\Git}}

\newcommand{\cyclesNat}[1]{\ensuremath{cyclesNat}{#1}}
\newcommand{\cycles}[1]{\ensuremath{cycles}{#1}}


